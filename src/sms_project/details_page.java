/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sms_project;

import java.sql.*;
import javax.swing.*;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
//import com.itextpdf.text.pdf.hyphenation.Hyphenator;
import java.awt.Component;
//import java.awt.Desktop;
import java.awt.Image;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.FilterOutputStream;
import java.io.IOException;
//import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
//import javax.swing.table.TableModel;

//import javax.swing.text.Document;
/**
 *
 * @author ASUS
 */
public class details_page extends javax.swing.JFrame {

    /**
     * Creates new form details_page
     */
    public details_page() {
        initComponents();
        date_time();
        Add_course();
        details_table.getColumnModel().getColumn(8).setCellRenderer(new ImageRenderer());
    }

    public void Add_course() {
        try (Connection conn = JDBC.con(); PreparedStatement pst = conn.prepareStatement("sp_sms_course_getall")) {
            ResultSet rs = pst.executeQuery();
            course.removeAllItems();
            while (rs.next()) {
                course.addItem(rs.getString("course_Name"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);

        }
    }

    private void date_time() {
        LocalDateTime now = LocalDateTime.now();
        String formattedTime = now.format(DateTimeFormatter.ofPattern("yyyy:MM:dd  HH:mm:ss"));
        date_time.setText(formattedTime);
    }

    private static class ImageRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (value instanceof ImageIcon) {
                JLabel label = new JLabel((ImageIcon) value);
                label.setHorizontalAlignment(SwingConstants.CENTER);
                return label;
            }
            return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        details_table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        pdf = new javax.swing.JButton();
        print = new javax.swing.JButton();
        update = new javax.swing.JButton();
        fetch = new javax.swing.JButton();
        csv = new javax.swing.JButton();
        close = new javax.swing.JButton();
        add = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        user_id = new javax.swing.JTextField();
        mobile_no = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        email_id = new javax.swing.JTextField();
        photo_path = new javax.swing.JTextField();
        course = new javax.swing.JComboBox<>();
        photo = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        date_time = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Details_page");
        setMaximumSize(new java.awt.Dimension(1062, 814));
        setMinimumSize(new java.awt.Dimension(1062, 814));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/details page icon.png"))); // NOI18N
        jLabel1.setText("DETAILS PAGE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 6, 294, -1));

        back.setBackground(new java.awt.Color(255, 204, 102));
        back.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        back.setText("<- BACK");
        back.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(958, 16, -1, -1));

        details_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USER-ID", "NAME", "EMAIL-ID", "D.O.B", "GENDER", "MOBILE NO.", "COURSE", "PHOTO PATH", "PHOTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        details_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                details_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(details_table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 1016, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("USER-ID :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 405, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("PHOTO :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(524, 552, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("COURSE :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 456, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("MOBILE NO. :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 405, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("NAME :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 456, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("EMAIL-ID :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 506, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("D.O.B :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 552, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("GENDER :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 602, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("PHOTO PATH :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 506, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 381, 1062, -1));

        pdf.setBackground(new java.awt.Color(255, 255, 153));
        pdf.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pdf.setText("PDF");
        pdf.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pdf.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfActionPerformed(evt);
            }
        });
        getContentPane().add(pdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 720, 102, 31));

        print.setBackground(new java.awt.Color(255, 255, 153));
        print.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        print.setText("PRINT");
        print.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        print.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 720, 102, 31));

        update.setBackground(new java.awt.Color(255, 204, 204));
        update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update.setText("UPDATE");
        update.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 680, 102, 31));

        fetch.setBackground(new java.awt.Color(0, 153, 255));
        fetch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fetch.setText("FETCH");
        fetch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        fetch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchActionPerformed(evt);
            }
        });
        getContentPane().add(fetch, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 680, 102, 31));

        csv.setBackground(new java.awt.Color(255, 255, 153));
        csv.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        csv.setText("CSV");
        csv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        csv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvActionPerformed(evt);
            }
        });
        getContentPane().add(csv, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 720, 102, 31));

        close.setBackground(new java.awt.Color(255, 0, 0));
        close.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        close.setText("CLOSE");
        close.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 720, 102, 31));

        add.setBackground(new java.awt.Color(255, 204, 204));
        add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add.setText("ADD");
        add.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 680, 102, 31));

        clear.setBackground(new java.awt.Color(255, 153, 0));
        clear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clear.setText("CLEAR");
        clear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 680, 102, 31));

        delete.setBackground(new java.awt.Color(255, 204, 204));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setText("DELETE");
        delete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 680, 102, -1));

        user_id.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        getContentPane().add(user_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 402, 221, -1));

        mobile_no.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        getContentPane().add(mobile_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 402, 221, -1));

        name.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 453, 221, -1));

        email_id.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        getContentPane().add(email_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 503, 221, -1));

        photo_path.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        getContentPane().add(photo_path, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 503, 221, -1));

        course.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseActionPerformed(evt);
            }
        });
        getContentPane().add(course, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 453, 221, -1));
        getContentPane().add(photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 555, 128, 113));

        buttonGroup1.add(male);
        male.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        male.setText("MALE");
        getContentPane().add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 610, 98, -1));

        buttonGroup1.add(female);
        female.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        female.setText("FEMALE");
        getContentPane().add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 610, 98, -1));

        date_time.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(date_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 32, 217, 32));
        getContentPane().add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 552, 230, 30));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background.jpg"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -4, 1070, 820));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        this.setVisible(false);
        new details_page().setVisible(true);
    }//GEN-LAST:event_clearActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_closeActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.setVisible(false);
        new main_page().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String imagepath = "";
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image File", "JPG", "JPEG", "PNG"));
        int returnvalue = fileChooser.showOpenDialog(this);
        if (returnvalue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            imagepath = file.getAbsolutePath();
            photo_path.setText(file.getName());
            photo.setIcon(new ImageIcon(new ImageIcon(imagepath).getImage().getScaledInstance(photo.getWidth(), photo.getHeight(), Image.SCALE_SMOOTH)));
        }

        //---------------------------------------------
        LocalDateTime now = LocalDateTime.now();
        String formattedTime = now.format(DateTimeFormatter.ofPattern("yyyy:MM:dd HH:mm:ss "));

        //------------------------------------------------
        String gender = male.isSelected() ? "male" : "female";

        //------------------------------------------------
        String crs = (String) course.getSelectedItem();

        //-----------------------------------------------
        String uid = user_id.getText();
        String Name = name.getText();
        String email = email_id.getText();
        String mobile = mobile_no.getText();

        //------------------------------------------------
        java.util.Date dob1 = dob.getDate();
        java.sql.Date dob2 = new java.sql.Date(dob1.getTime());

        if (!uid.isEmpty() && !Name.isEmpty() && !email.isEmpty() && !dob2.equals("") && !gender.isEmpty() && !mobile.isEmpty()
                && !crs.isEmpty() && !imagepath.isEmpty()) {

            try (Connection conn = JDBC.con(); PreparedStatement pst = conn.prepareStatement("sp_sms_student_insert ?,?,?,?,?,?,?,?")) {
                pst.setString(1, uid);
                pst.setString(2, Name);
                pst.setString(3, email);
                pst.setDate(4, dob2);
                pst.setString(5, gender);
                pst.setString(6, mobile);
                pst.setString(7, crs);
                pst.setString(8, imagepath);
//            pst.setString(9,formattedTime);

                int result = pst.executeUpdate();
                if (result == 1) {
                    JOptionPane.showMessageDialog(this, "Datas Added");
                } else {
                    JOptionPane.showMessageDialog(this, "Datas Not Add");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        } else {
            JOptionPane.showMessageDialog(this, " Enter All Datas");
        }

    }//GEN-LAST:event_addActionPerformed

    private void fetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchActionPerformed
        DefaultTableModel model = (DefaultTableModel) details_table.getModel();
        try (Connection conn = JDBC.con(); PreparedStatement pst = conn.prepareStatement("sp_sms_student_getall")) {
            ResultSet rs = pst.executeQuery();
            model.setRowCount(0);
            SimpleDateFormat df = new SimpleDateFormat("yyyy:MM:dd");

            while (rs.next()) {
                String user_ID = rs.getString("user_id");
                String NAME = rs.getString("name");
                String Email = rs.getString("email_id");

                java.sql.Date dob1 = rs.getDate("dob");
                String date = df.format(dob1);

                String Gender = rs.getString("gender");
                String Mobile = rs.getString("mobilr_no");
                String cor = rs.getString("course");

                String photopath = rs.getString("photo_path");
                ImageIcon imageicon = null;
                if (new File(photopath).exists()) {
                    Image img = new ImageIcon(photopath).getImage();
                    Image ScaledImage = img.getScaledInstance(100, 300, Image.SCALE_SMOOTH);
                    imageicon = new ImageIcon(ScaledImage);

                }
                model.addRow(new Object[]{user_ID, NAME, Email, date, Gender, Mobile, cor, photopath, imageicon});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_fetchActionPerformed

    private void details_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_details_tableMouseClicked
        DefaultTableModel model = (DefaultTableModel) details_table.getModel();
        try {

            int row = 0;
            row = details_table.rowAtPoint(evt.getPoint());

            String USER_ID = details_table.getValueAt(row, 0).toString();
            String NAME = details_table.getValueAt(row, 1).toString();
            String EMAIL_ID = details_table.getValueAt(row, 2).toString();
            String dob1 = (String) details_table.getValueAt(row, 3);
            java.util.Date utildate = new SimpleDateFormat("yyyy:MM:dd").parse(dob1);
            String GENDER = details_table.getValueAt(row, 4).toString();
            String MOBILE = details_table.getValueAt(row, 5).toString();
            String COURSE = details_table.getValueAt(row, 6).toString();
            String PHOTO_PATH = details_table.getValueAt(row, 7).toString();

            user_id.setText(USER_ID);
            name.setText(NAME);
            email_id.setText(EMAIL_ID);
            dob.setDate(utildate);

            if ("Male".equalsIgnoreCase(GENDER)) {
                male.setSelected(true);
            } else if ("Female".equalsIgnoreCase(GENDER)) {
                female.setSelected(true);
            }
            mobile_no.setText(MOBILE);
            course.setSelectedItem(COURSE);
            photo_path.setText(PHOTO_PATH);
            photo.setIcon(new ImageIcon(new ImageIcon(PHOTO_PATH).getImage().getScaledInstance(photo.getWidth(), photo.getHeight(),
                    Image.SCALE_SMOOTH)));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_details_tableMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String imagepath = "";
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image File", "JPG", "JPEG", "PNG"));
        int returnvalue = fileChooser.showOpenDialog(this);
        if (returnvalue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            imagepath = file.getAbsolutePath();
            photo_path.setText(file.getName());
            photo.setIcon(new ImageIcon(new ImageIcon(imagepath).getImage().getScaledInstance(photo.getWidth(), photo.getHeight(), Image.SCALE_SMOOTH)));
        }

        //---------------------------------------------
        LocalDateTime now = LocalDateTime.now();
        String formattedTime = now.format(DateTimeFormatter.ofPattern("yyyy:MM:dd HH:mm:ss "));

        //------------------------------------------------
        String gender = male.isSelected() ? "male" : "female";

        //------------------------------------------------
        String crs = (String) course.getSelectedItem();

        //-----------------------------------------------
        String uid = user_id.getText();
        String Name = name.getText();
        String email = email_id.getText();
        String mobile = mobile_no.getText();

        //------------------------------------------------
        java.util.Date dob1 = dob.getDate();
        java.sql.Date dob2 = new java.sql.Date(dob1.getTime());

        if (!uid.isEmpty() && !Name.isEmpty() && !email.isEmpty() && !dob2.equals("") && !gender.isEmpty() && !mobile.isEmpty()
                && !crs.isEmpty() && !imagepath.isEmpty()) {

            try (Connection conn = JDBC.con(); PreparedStatement pst = conn.prepareStatement("sp_sms_student_update ?,?,?,?,?,?,?,?")) {
                pst.setString(1, uid);
                pst.setString(2, Name);
                pst.setString(3, email);
                pst.setDate(4, dob2);
                pst.setString(5, gender);
                pst.setString(6, mobile);
                pst.setString(7, crs);
                pst.setString(8, imagepath);
//            pst.setString(9,formattedTime);

                int result = pst.executeUpdate();
                if (result == 1) {
                    JOptionPane.showMessageDialog(this, "Datas Updated");
                } else {
                    JOptionPane.showMessageDialog(this, "Datas Not Updated");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        } else {
            JOptionPane.showMessageDialog(this, " Enter All Datas");
        }

    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        String id = user_id.getText();
        if (!id.isEmpty()) {
            try (Connection conn = JDBC.con(); PreparedStatement pst = conn.prepareStatement("sp_sms_student_delete ?")) {
                pst.setString(1, id);
                int result = pst.executeUpdate();
                if (result == 1) {
                    JOptionPane.showMessageDialog(this, "Deleted");
                    this.setVisible(false);
                    new details_page().setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, " Can't Deleted");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        } else {
            JOptionPane.showMessageDialog(this, " Enter User-ID");
        }

    }//GEN-LAST:event_deleteActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            boolean complete = details_table.print(JTable.PrintMode.FIT_WIDTH);
            if (complete) {
                JOptionPane.showMessageDialog(this, "Successfully Printed", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Printing Cancelled", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, " Printing Error" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_printActionPerformed

    private void pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfActionPerformed
        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = j.getSelectedFile().getPath();
        }
        Document doc = new Document();
        try (Connection conn = JDBC.con(); PreparedStatement pst = conn.prepareStatement("sp_sms_student_getall")) {
            ResultSet rs = pst.executeQuery();
            PdfWriter.getInstance(doc, new FileOutputStream(path + "abc.pdf"));
            doc.open();
            Font titleFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
            Paragraph title = new Paragraph("STUDENT DETAILS", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);
            doc.add(title);
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("\n"));
            PdfPTable tbl = new PdfPTable(9);
            {
                tbl.addCell("USER-ID");
                tbl.addCell("NAME");
                tbl.addCell("EMAIL-ID");
                tbl.addCell("D.O.B");
                tbl.addCell("GENDER");
                tbl.addCell("MOBILE NO.");
                tbl.addCell("COURSE");
                tbl.addCell("PHOTO PATH");
                tbl.addCell("PHOTO");
                while (rs.next()) {

                    tbl.addCell(rs.getString("user_id"));
                    tbl.addCell(rs.getString("name"));
                    tbl.addCell(rs.getString("email_id"));
                    tbl.addCell(rs.getString("dob"));
                    tbl.addCell(rs.getString("gender"));
                    tbl.addCell(rs.getString("mobilr_no"));
                    tbl.addCell(rs.getString("course"));
                    tbl.addCell(rs.getString("photo_path"));

                    String imageFileName = rs.getString("photo_path");
                    if (imageFileName != null && !imageFileName.isEmpty()) {
                        File imageFile = new File(imageFileName);
                        if (imageFile.exists()) {
                            com.itextpdf.text.Image image = com.itextpdf.text.Image.getInstance(imageFile.getAbsolutePath());
                            image.scaleToFit(50, 50);
                            PdfPCell imgCell = new PdfPCell(image, true);
                            imgCell.setHorizontalAlignment(Element.ALIGN_CENTER);
                            tbl.addCell(imgCell);
                        } else {
                            tbl.addCell("IMAGE NOT FOUND");
                        }
                    } else {
                        tbl.addCell("NO IMAGE");
                    }
                }
                doc.add(tbl);
                JOptionPane.showMessageDialog(this, "PDF Genrated");

            }
//            JOptionPane.showMessageDialog(this, "PDF Can't Genrate");
            doc.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }


    }//GEN-LAST:event_pdfActionPerformed

    private void csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            String FilePath = fileToSave.getAbsolutePath();
            if (!FilePath.endsWith(".csv")) {
                FilePath += ".csv";
            }

            try (BufferedWriter writer = new BufferedWriter(new FileWriter(FilePath))) {

                for (int i = 0; i < details_table.getColumnCount(); i++) {
                    writer.write(details_table.getColumnName(i));
                    if (i < details_table.getColumnCount() - 1) {
                        writer.write(",");
                    }
                }
                writer.newLine();

                for (int row = 0; row < details_table.getRowCount(); row++) {
                    for (int col = 0; col < details_table.getColumnCount(); col++) {
                        writer.write(details_table.getValueAt(row, col).toString());
                        if (col < details_table.getColumnCount() - 1) {
                            writer.write(",");
                        }
                    }
                    writer.newLine();
                }

                JOptionPane.showMessageDialog(this, "Exported as CSV Successfully");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        } else {
            JOptionPane.showMessageDialog(this, " Can't Export as CSV Successfully");
        }

    }//GEN-LAST:event_csvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(details_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(details_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(details_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(details_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new details_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton clear;
    private javax.swing.JButton close;
    private javax.swing.JComboBox<String> course;
    private javax.swing.JButton csv;
    private javax.swing.JLabel date_time;
    private javax.swing.JButton delete;
    private javax.swing.JTable details_table;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField email_id;
    private javax.swing.JRadioButton female;
    private javax.swing.JButton fetch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField mobile_no;
    private javax.swing.JTextField name;
    private javax.swing.JButton pdf;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField photo_path;
    private javax.swing.JButton print;
    private javax.swing.JButton update;
    private javax.swing.JTextField user_id;
    // End of variables declaration//GEN-END:variables
}
